version: "3"
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  init:
    image: apache/airflow:2.8.0
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dag
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - PYTHONPATH=/opt/airflow
    env_file:
      - ./config/airflow.env
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt
    entrypoint: >
      bash -c "
      pip install -r /requirements.txt &&
      airflow db init &&
      airflow users create --username admin --password admin --firstname Dhanya --lastname Devassy --role Admin --email admin@example.com
      "

  webserver:
    image: apache/airflow:2.8.0
    depends_on:
      - postgres
      - init
    env_file:
      - ./config/airflow.env
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dag
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - PYTHONPATH=/opt/airflow
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt
    ports:
      - "8081:8080"
    command: >
      bash -c "pip install -r /requirements.txt && airflow webserver"

  scheduler:
    image: apache/airflow:2.8.0
    depends_on:
      - webserver
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dag
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - PYTHONPATH=/opt/airflow
    env_file:
      - ./config/airflow.env
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install -r /requirements.txt && airflow scheduler"

volumes:
  postgres_data:
